rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Game rules - more granular control
    match /games/{gameId} {
      // Anyone can read a game
      allow read: if request.auth != null;
      
      // Only the host can create a game
      allow create: if request.auth != null && request.resource.data.hostId == request.auth.uid;
      
      // Only the host can update most game properties
      allow update: if request.auth != null && (
        // Host can update anything
        resource.data.hostId == request.auth.uid ||
        // Players can submit to their own rounds
        (request.resource.data.rounds.size() > 0 && 
         isPlayerSubmittingToOwnRound(resource.data, request.auth.uid))
      );
    }
    
    // Helper function to check if a player is submitting to their own round
    function isPlayerSubmittingToOwnRound(oldData, userId) {
      return oldData.players.hasAny([{'id': userId}]) && 
             request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rounds']);
    }
  }
}